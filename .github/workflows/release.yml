name: "Build and release"

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - 1.8 # increment for each major build

jobs:
  latest-release:
    name: "Latest Release"
    runs-on: "macos-latest"

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set release flags based on branch
        run: |
          echo "X_SHORT_HASH=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "X_RELEASE_TAG=${{ github.ref_name == 'development' && 'preview' || startsWith(github.ref_name, '1.') && 'stable' || github.ref_name }}" >> $GITHUB_ENV
          grep -Eo 'version.*\.\d+' src/manifest/manifest-chrome.json > ver.tmp
          sed -E 's/[^0-9]*([0-9.]+).*/X_VERSION=\1/' ver.tmp >> $GITHUB_ENV
          sed -E 's/[^0-9]*([0-9]+\.[0-9]+(\.[1-9][0-9]*)?).*/X_SAFARI_VERSION=\1/' ver.tmp >> $GITHUB_ENV
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Download WikiTree+ templates
        # only run this once per release to ensure it is identical in all builds
        run: npm run download-templates
      - name: Build for Chrome
        run: |
          npm run clean
          npm run build
          cd dist
          zip -r ../dist-chrome.zip *
          cd ..
      - name: Prepare Xcode environment
        env:
          X_SAFARI_FOLDER: ${{ env.X_RELEASE_TAG == 'stable' && 'WikiTree Browser Extension' || 'WikiTree Browser Extension (Preview)' }}
          X_SAFARI_PROJECT: xcode/${{ env.X_RELEASE_TAG == 'stable' && 'WikiTree Browser Extension' || 'WikiTree Browser Extension (Preview)' }}/${{ env.X_RELEASE_TAG == 'stable' && 'WikiTree Browser Extension' || 'WikiTree Browser Extension (Preview)' }}.xcodeproj
        run: |
          echo "X_SAFARI_FOLDER=${{ env.X_SAFARI_FOLDER }}" >> $GITHUB_ENV
          echo "X_SAFARI_PROJECT=${{ env.X_SAFARI_PROJECT }}" >> $GITHUB_ENV
          echo "X_SAFARI_SIGNED=${{ secrets.BUILD_CERTIFICATE_BASE64 != '' && 'signed' || 'unsigned' }}" >> $GITHUB_ENV
          mv -f "${{ env.X_SAFARI_PROJECT }}/project.pbxproj" "${{ env.X_SAFARI_PROJECT }}/project.pbxproj.tmp"
          sed -E 's/MARKETING_VERSION[ ]*=[ ]*[0-9.]+/MARKETING_VERSION = ${{ env.X_SAFARI_VERSION }}/Ig' "${{ env.X_SAFARI_PROJECT }}/project.pbxproj.tmp" > "${{ env.X_SAFARI_PROJECT }}/project.pbxproj"
      - name: Update Xcode project when unsigned
        if: env.X_SAFARI_SIGNED != 'signed'
        run: |
          mv -f "${{ env.X_SAFARI_PROJECT }}/project.pbxproj" "${{ env.X_SAFARI_PROJECT }}/project.pbxproj.tmp"
          sed -E 's/(DEVELOPMENT_TEAM[ ]*=[ ]*.*;)/\/* \1 *\//Ig' "${{ env.X_SAFARI_PROJECT }}/project.pbxproj.tmp" > "${{ env.X_SAFARI_PROJECT }}/project.pbxproj"
      - name: Update Xcode environment for signing
        if: env.X_SAFARI_SIGNED == 'signed'
        run: |
          echo TODO: need to set up signing keys
      - name: Build for Safari (macOS)
        # using dist already built from Chrome
        run: |
          rm -rf xcode/*.xcarchive
          xcodebuild clean archive -quiet -project "${{ env.X_SAFARI_PROJECT }}" -scheme "${{ env.X_SAFARI_FOLDER }} (macOS)" -configuration Release -destination generic/platform=macOS -archivePath xcode/output
          cd xcode/output.xcarchive/Products/Applications
          zip -r ../../../../dist-safari-macos.zip "${{ env.X_SAFARI_FOLDER }}.app"
          cd ../../../..
      - name: Build for Safari (iOS)
        if: env.X_SAFARI_SIGNED == 'signed'
        run: |
          rm -rf xcode/*.xcarchive
          xcodebuild clean archive -quiet -project "${{ env.X_SAFARI_PROJECT }}" -scheme "${{ env.X_SAFARI_FOLDER }} (iOS)" -configuration Release -destination generic/platform=iOS -archivePath xcode/output
          cd xcode/output.xcarchive/Products/Applications
          zip -r ../../../../dist-safari-ios.zip "${{ env.X_SAFARI_FOLDER }}.app"
          cd ../../../..
      - name: Build for Firefox
        run: |
          npm run clean
          npm run build-firefox
          cd dist
          zip -r ../dist-firefox.zip *
          cd ..
      - name: Rename release assets
        run: |
          mv dist-chrome.zip wbe-${{ env.X_RELEASE_TAG }}-${{ env.X_VERSION }}-${{ env.X_SHORT_HASH }}-chrome.zip
          mv dist-firefox.zip wbe-${{ env.X_RELEASE_TAG }}-${{ env.X_VERSION }}-${{ env.X_SHORT_HASH }}-firefox.zip
          mv dist-safari-macos.zip wbe-${{ env.X_RELEASE_TAG }}-${{ env.X_VERSION }}-${{ env.X_SHORT_HASH }}-safari-macos-${{ env.X_SAFARI_SIGNED }}.zip
          [ ! -f dist-safari-ios.zip ] || mv dist-safari-ios.zip wbe-${{ env.X_RELEASE_TAG }}-${{ env.X_VERSION }}-${{ env.X_SHORT_HASH }}-safari-ios-${{ env.X_SAFARI_SIGNED }}.zip
      - name: Update release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: ${{ env.X_RELEASE_TAG != 'stable' }}
          files: wbe-*.zip
          automatic_release_tag: "${{ (env.X_RELEASE_TAG == 'stable' || env.X_RELEASE_TAG == 'preview') && env.X_RELEASE_TAG || format('release-{0}', github.ref_name) }}"
          title: ${{ env.X_RELEASE_TAG }}-${{ env.X_VERSION }}
